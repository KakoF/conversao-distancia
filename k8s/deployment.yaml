apiVersion: apps/v1

kind: Deployment

metadata:
  name: conversao-distancia

spec:
  replicas: 8
  #strategy:
  #  type: RollingUpdate
  #  rollingUpdate:
  #    maxUnavailable: 1
  #    maxSurge: 1
  selector:
    matchLabels:
      app: conversao-distancia
  template:
    metadata:
      labels:
        app: conversao-distancia
    spec:
      containers:
        - name: conversao-distancia
          image: kakoferrare/conversao-distancia:v1
          ports:
            - containerPort: 5000

          #Setar recurso
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"

          # Probes: Liveness e readiness probes garantem que o Kubernetes monitore a saúde dos Pods e só direcione tráfego para Pods prontos.
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: 5000
          #  initialDelaySeconds: 10
          #  periodSeconds: 10
          #readinessProbe:
          #  httpGet:
          #    path: /ready
          #    port: 5000
          #  initialDelaySeconds: 10
          #  periodSeconds: 10

---
apiVersion: v1

kind: Service

metadata:
  name: conversao-distancia

spec:
  selector:
    app: conversao-distancia
  ports:
    - port: 80
      targetPort: 5000
      nodePort: 30000
  type: NodePort

---
#apiVersion: policy/v1
#kind: PodDisruptionBudget
#metadata:
#  name: conversao-distancia-pdb
#spec:
#  minAvailable: 7
#  selector:
#    matchLabels:
#      app: conversao-distancia
